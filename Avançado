#include <stdio.h>

#define TAM 11
#define TAM_NAVIO 3
#define Alfa 10

void exibirTabuleiro(int tabuleiro[TAM][TAM]) {
    printf("   ");
    for (int i = 0; i < Alfa; i++) {
        printf(" %c ", 'A' + i); 
    }
    printf("\n");

    for (int i = 1; i < TAM; i++) {
        printf("%2d ", i); 
        for (int j = 1; j < TAM; j++) {
            printf("%2d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

void habilidade_cone(int tabuleiro[TAM][TAM], int linha, int coluna) {
    for (int i = 0; i <= 2; i++) {
        for (int j = -i; j <= i; j++) {
            int l = linha + i;
            int c = coluna + j;
            if (l > 0 && l < TAM && c > 0 && c < TAM) {
                tabuleiro[l][c] = 5;
            }
        }
    }
}

void habilidade_cruz(int tabuleiro[TAM][TAM], int linha, int coluna) {
    int offsets[8][4] = {
        {-1, 0},
        {0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2},
        {1, 0}
    };
    for (int i = 0; i < 7; i++) {
        int l = linha + offsets[i][0];
        int c = coluna + offsets[i][1];
        if (l > 0 && l < TAM && c > 0 && c < TAM) {
            tabuleiro[l][c] = 5;
        }
    }
}

void habilidade_octaedro(int tabuleiro[TAM][TAM], int linha, int coluna) {
    int offsets[5][2] = {
        {0, 0},
        {-1, 0},
        {1, 0},
        {0, -1},
        {0, 1}
    };
    for (int i = 0; i < 5; i++) {
        int l = linha + offsets[i][0];
        int c = coluna + offsets[i][1];
        if (l > 0 && l < TAM && c > 0 && c < TAM) {
            tabuleiro[l][c] = 5;
        }
    }
}


int main() {
    int tabuleiro[TAM][TAM] = {0};

    int navio1[TAM_NAVIO] = {3, 3, 3};
    int linha1 = 2;
    int coluna1 = 8;

    if (coluna1 + TAM_NAVIO > TAM) {
        printf("Erro: Navio 1 não cabe horizontalmente no tabuleiro.\n");
        return 1;
    }

    for (int i = 0; i < TAM_NAVIO; i++) {
        if (tabuleiro[linha1][coluna1 + i] != 0) {
            printf("Erro: Sobreposição detectada para o navio 1.\n");
            return 1;
        }
    }

    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linha1][coluna1 + i] = navio1[i];
    }

    int navio2[TAM_NAVIO] = {3, 3, 3};
    int linha2 = 7;
    int coluna2 = 2;

    if (linha2 + TAM_NAVIO > TAM) {
        printf("Erro: Navio 2 não cabe verticalmente no tabuleiro.\n");
        return 1;
    }

    for (int i = 0; i < TAM_NAVIO; i++) {
        if (tabuleiro[linha2 + i][coluna2] != 0) {
            printf("Erro: Sobreposição detectada para o navio 2.\n");
            return 1;
        }
    }

    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linha2 + i][coluna2] = navio2[i];
    }

    int navio3[TAM_NAVIO] = {3, 3, 3};
    int linha3 = 8;
    int coluna3 = 8;
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linha3 + i][coluna3 + i] = 3;
    }

    
    habilidade_cone(tabuleiro, 1, 4);      
    habilidade_cruz(tabuleiro, 5, 8);      
    habilidade_octaedro(tabuleiro, 7, 5);  

    printf("\nTabuleiro Final:\n");
    exibirTabuleiro(tabuleiro);

    return 0;
}
